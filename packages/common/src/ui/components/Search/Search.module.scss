@import '../../styles/theme.scss';
@import '../../styles/abstracts/typography';
@import '../../styles/abstracts/mixins';

$button_size: 52px;

.autoComplete {
  &:global(.ant-select-open) {
    :local(.inputSearch) {
      border-bottom-left-radius: 0px !important;
      border-bottom-right-radius: 0px !important;

      box-shadow: 0px -16px 16px -16px rgba(167, 143, 160, 0.2), -10px -6px 16px -16px rgba(167, 143, 160, 0.2),
        10px -6px 16px -16px rgba(167, 143, 160, 0.2) !important;
    }
  }
}

.inputSearch {
  align-items: center !important;
  background: var(--light-mode-light-grey, var(--dark-mode-dark-grey, #2f2f2f)) !important;
  border-radius: size_unit(2) !important;
  display: flex !important;
  flex-direction: row !important;
  gap: size_unit(2) !important;
  height: size_unit(8) !important;
  justify-content: space-between !important;
  padding: 0 size_unit(0.75) 0 size_unit(2.5) !important;

  border: 1.5px solid transparent !important;

  :global {
    .ant-input {
      @include text-bodyLarge-semi-bold;
      color: var(--text-color-primary);
      padding: 0 !important;
      flex: 1;
      &::placeholder {
        @include text-bodyLarge-semi-bold;
        color: var(--text-color-secondary) !important;
        font-size: var(--bodyLarge, 18px) !important;
      }
    }

    .ant-input:placeholder-shown {
      font-size: var(--bodyLarge, 18px) !important;
    }
    .ant-input-disabled {
      color: var(--light-mode-dark-grey, var(--dark-mode-light-grey-plus, #a9a9a9));
      opacity: 0.24;
    }
  }

  &:hover {
    border: 1.5px solid var(--light-mode-light-grey-plus-56, var(--dark-mode-grey, #383838)) !important;
  }

  &:active,
  &:focus {
    border: 1.5px solid transparent !important;
  }

  &.disabled {
    border: 1.5px solid transparent !important;
    cursor: not-allowed;
  }

  &.focus {
    border: 1.5px solid transparent !important;
    background-color: var(--light-mode-light-grey-plus-56, var(--dark-mode-mid-grey, #333333)) !important;
  }

  .searchIcon {
    font-size: $font-size-bodyLarge !important;
    width: 18px !important;
  }
}

.dropdown {
  background-color: var(--light-mode-light-grey, var(--dark-mode-dark-grey, #2f2f2f)) !important;
  border-bottom-left-radius: size_unit(2) !important;
  border-bottom-right-radius: size_unit(2) !important;
  border-top: 1.5px solid var(--light-mode-light-grey-plus, var(--dark-mode-grey, #383838));
  box-shadow: 0px 16px 16px -16px rgba(167, 143, 160, 0.2), -8px 6px 16px -10px rgba(167, 143, 160, 0.2),
    8px 6px 16px -10px rgba(167, 143, 160, 0.2) !important;
  margin-top: -#{size_unit(4)} !important;
  padding: size_unit(1) size_unit(0.75) !important;
  :global {
    .ant-select-item-option-active:not(.ant-select-item-option-disabled) {
      background: var(--light-mode-light-grey-plus, var(--dark-mode-grey, #383838)) !important;
      border-radius: size_unit(1) !important;
    }
    .ant-select-item-option {
      height: 64px !important;
      display: flex !important;
      align-items: center !important;
      padding: 0 24px !important;
    }
  }
}

@media (max-width: $breakpoint-popup) {
  .inputSearch {
    font-size: var(--bodyLarge, 18px) !important;
  }
  .dropdown {
    padding: size_unit(1) size_unit(2) !important;
    box-shadow: 0px -16px 16px -16px rgba(167, 143, 160, 0.2) !important;
    :global {
      .rc-virtual-list-holder-inner {
        gap: size_unit(1);
      }
      .ant-select-item {
        height: auto !important;
        padding: size_unit(1) size_unit(3) !important;
      }

      .ant-input:placeholder-shown {
        font-size: var(--bodyLarge, 18px) !important;
      }

      input::placeholder {
        font-size: var(--bodyLarge, 18px) !important;
        line-height: size_unit(3) !important;
        font-weight: 500 !important;
      }
    }
  }
}

.icon {
  font-size: $font-size-bodyLarge;
}

button.clear {
  z-index: 1;
  @include flex-center;
  background-color: var(--color-white, var(--dark-mode-grey, #ffffff));
  color: var(--text-color-secondary);
  border-radius: 11px; // should we use size_unit function in this case?
  border: none;
  height: $button_size;
  min-height: $button_size;
  min-width: $button_size;
  width: $button_size;
  box-shadow: none !important;

  &:active,
  &:focus {
    box-shadow: none !important;
    border: none !important;
    background-color: var(--color-white, var(--dark-mode-grey, #ffffff)) !important;
  }

  &:hover {
    box-shadow: none !important;
    background-color: var(--color-white, var(--dark-mode-grey, #ffffff));
    color: var(--light-mode-dark-grey, #fff) !important;
  }

  &:disabled {
    background-color: var(--color-white, var(--dark-mode-grey, #ffffff)) !important;
    .icon {
      opacity: 0.24;
      color: var(--light-mode-dark-grey, var(--dark-mode-light-grey, #c0c0c0));
    }
  }

  .icon {
    font-size: size_unit(1.5);
  }
}

.content {
  width: 100%;
  position: relative;
}

.loaderContainer {
  display: flex;
  z-index: 2;
}
.loader {
  @include spin-animation();
  font-size: 20px !important;
  color: var(--light-mode-mid-grey, var(--dark-mode-light-grey)) !important;
}
