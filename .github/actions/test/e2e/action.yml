name: e2e-split
description: Execute e2e regression split tests

inputs:
  LACE_EXTENSION_KEY:
    description: 'Public extended manifest key'
    required: true
  WALLET_PASSWORD:
    description: 'Test wallet password'
    required: true
  TEST_DAPP_URL:
    description: 'Test DApp Url'
    required: true
  GITHUB_TOKEN:
    description: 'Github token'
    required: true
  BROWSER:
    description: 'browser'
    required: false
    default: 'chrome'
  DISPLAY:
    description: ''
    required: false
    default: ':99.0'
  BATCH:
    description: 'Tests batch'
    required: true
    default: '1'
  SMOKE_ONLY:
    description: 'Run only smoke tests'
    required: true
    default: 'false'

runs:
  using: 'composite'

  steps:
    - name: Start XVFB
      shell: bash
      env:
        DISPLAY: ${{ inputs.DISPLAY }}
      run: |
        Xvfb :99 &
    - name: Build dist version of Lace
      uses: ./.github/shared/build
      with:
        LACE_EXTENSION_KEY: ${{ inputs.LACE_EXTENSION_KEY }}
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
    - name: Decrypt test data
      if: success()
      working-directory: ./packages/e2e-tests
      run: ./decrypt_secret.sh
      shell: bash
      env:
        WALLET_1_PASSWORD: ${{ inputs.WALLET_PASSWORD }}
    - name: Execute E2E tests
      if: success()
      shell: bash
      id: e2e-tests
      working-directory: ./packages/e2e-tests
      env:
        WALLET_1_PASSWORD: ${{ inputs.WALLET_PASSWORD }}
        TEST_DAPP_URL: ${{ inputs.TEST_DAPP_URL }}
        BROWSER: ${{ inputs.BROWSER }}
        DISPLAY: ${{ inputs.DISPLAY }}
        BATCH: ${{ inputs.BATCH }}
      run: |
        if [ "${{ inputs.SMOKE_ONLY }}" == "true" ]; then
          runCommand="yarn wdio run wdio.conf.${BROWSER}.ts --suite batch${BATCH} --cucumberOpts.tags='@Smoke and @Testnet and not @Pending'"
        else
          runCommand="yarn wdio run wdio.conf.${BROWSER}.ts --suite batch${BATCH} --cucumberOpts.tags='@Testnet and not @Pending'"
        fi
        eval "$runCommand";
    - name: Save dmesg logs
      shell: bash
      if: always()
      working-directory: ./packages/e2e-tests
      run: |
        sudo dmesg > ./dmesg.log
    - name: Publish artifacts (logs, reports, screenshots)
      if: always()
      uses: actions/upload-artifact@v4
      env:
        BATCH: ${{ inputs.BATCH }}
      with:
        name: runner-artifacts-${{ env.BATCH }}
        path: |
          ./packages/e2e-tests/screenshots
          ./packages/e2e-tests/logs
          ./packages/e2e-tests/reports/allure/results
          ./packages/e2e-tests/dmesg.log
        retention-days: 5
