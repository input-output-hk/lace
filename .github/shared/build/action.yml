name: Shared Build
description: Shared build config for both Chromium and Safari workflows
inputs:
  LACE_EXTENSION_KEY:
    description: 'Public extended manifest key'
    required: true
  GITHUB_TOKEN:
    description: 'GitHub Token'
    required: true
  BUILD_DEV_PREVIEW:
    description: 'Build developer preview of Lace'
    required: false
    default: 'false'
  POSTHOG_PRODUCTION_TOKEN_MAINNET:
    description: 'Post hog production mainnet token'
    required: false
    default: ''
  POSTHOG_PRODUCTION_TOKEN_PREPROD:
    description: 'Post hog production preprod token'
    required: false
    default: ''
  POSTHOG_PRODUCTION_TOKEN_PREVIEW:
    description: 'Post hog production preview token'
    required: false
    default: ''
  PRODUCTION_MODE_TRACKING:
    description: 'Enable analytics tracking in production'
    required: false
    default: 'false'
  BANXA_LACE_URL:
    description: 'Banxa`s integration URL'
    required: false
    default: 'https://lacewallet.banxa-sandbox.com/'
  CARDANO_SERVICES_URL_PREPROD:
    description: 'Url for preprod env'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: 'yarn'
    - name: Node modules cache
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          **/node_modules
        key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
    - name: Check if build exists already
      shell: bash
      id: check-build-exists
      run: |
        ART_ID=$(curl -H "Authorization: Bearer ${{ inputs.GITHUB_TOKEN }}" https://api.github.com/repos/input-output-hk/lace/actions/artifacts?name=lace-build-${{ github.sha }} | jq -r .artifacts[0].id)
        if ([ "$ART_ID" == "null" ] || [[ "${CARDANO_SERVICES_URL_PREPROD}" == *"staging"* ]]) then
          echo "No Lace build artifact found or it is different than dev, will build it now"
          echo "build_exists=false" >> $GITHUB_OUTPUT
        else
          curl -o build_artifact.zip --location "https://api.github.com/repos/input-output-hk/lace/actions/artifacts/${ART_ID}/zip" -H "Authorization: Bearer ${{ inputs.GITHUB_TOKEN }}"
          unzip build_artifact.zip -d ./apps/browser-extension-wallet/dist
          echo "Build artifact found and downloaded"
          echo "build_exists=true" >> $GITHUB_OUTPUT
        fi
    - name: Configure Yarn to use GitHub Packages
      if: steps.check-build-exists.outputs.build_exists == 'false'
      run: |
        SCOPE="input-output-hk"
        FILE="$HOME/.yarnrc.yml"
        if grep -q "npmScopes:" "$FILE"; then
          if ! grep -q "$SCOPE:" "$FILE"; then
            echo "  $SCOPE:" >> "$FILE"
            echo "    npmRegistryServer: \"https://npm.pkg.github.com\"" >> "$FILE"
            echo "    npmAuthToken: \"${{ inputs.GITHUB_TOKEN }}\"" >> "$FILE"
            echo "Added $SCOPE to $FILE"
          else
            echo "$SCOPE already present in $FILE"
          fi
        else
          echo "npmScopes:" >> "$FILE"
          echo "  $SCOPE:" >> "$FILE"
          echo "    npmRegistryServer: \"https://npm.pkg.github.com\"" >> "$FILE"
          echo "    npmAuthToken: \"${{ inputs.GITHUB_TOKEN }}\"" >> "$FILE"
          echo "Added npmScopes and $SCOPE to $FILE"
        fi
      shell: bash
    - name: Install dependencies
      if: steps.check-build-exists.outputs.build_exists == 'false'
      shell: bash
      run: yarn install --immutable --inline-builds
    - name: Build dist version
      if: steps.check-build-exists.outputs.build_exists == 'false'
      shell: bash
      env:
        NODE_OPTIONS: '--max_old_space_size=8192'
        BUILD_DEV_PREVIEW: ${{ inputs.BUILD_DEV_PREVIEW }}
        LACE_EXTENSION_KEY: ${{ inputs.LACE_EXTENSION_KEY }}
        POSTHOG_PRODUCTION_TOKEN_MAINNET: ${{ inputs.POSTHOG_PRODUCTION_TOKEN_MAINNET }}
        POSTHOG_PRODUCTION_TOKEN_PREPROD: ${{ inputs.POSTHOG_PRODUCTION_TOKEN_PREPROD }}
        POSTHOG_PRODUCTION_TOKEN_PREVIEW: ${{ inputs.POSTHOG_PRODUCTION_TOKEN_PREVIEW }}
        PRODUCTION_MODE_TRACKING: ${{ inputs.PRODUCTION_MODE_TRACKING }}
        BANXA_LACE_URL: ${{ inputs.BANXA_LACE_URL }}
      run: yarn browser build
    - name: Upload artifact
      if: steps.check-build-exists.outputs.build_exists == 'false'
      uses: actions/upload-artifact@v4
      with:
        name: lace-build-${{ github.sha }}
        path: ./apps/browser-extension-wallet/dist
        overwrite: true
