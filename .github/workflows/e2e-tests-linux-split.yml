name: E2E Tests Linux split

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - 'release/**'
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to use'
        required: true
        default: 'chrome'
        type: choice
        options:
          - chrome
          - edge
      network:
        description: 'network to use'
        required: true
        default: 'preprod'
        type: choice
        options:
          - preprod
          - mainnet
      runner:
        type: choice
        required: true
        default: 'ubuntu-22.04'
        description: runner to use
        options:
          - self-hosted
          - ubuntu-22.04
          - ubuntu-20.04
          - ubuntu-latest
      smoke_only:
        type: boolean
        description: 'Run only smoke tests'
        required: true
        default: false
      cardano_services_env:
        type: choice
        required: true
        default: dev
        description: 'cardano services environment to use'
        options:
          - dev
          - staging
          - live

run-name: "E2E | os: Linux | browser: ${{ github.event.inputs.browser || 'chrome' }} | network: ${{ github.event.inputs.network || 'preprod' }} | #${{ github.run_number }} | smoke only: ${{ github.event.inputs.smoke_only || 'false' }} | cardano services env: ${{ github.event.inputs.cardano_services_env || 'dev' }}"

env:
  BROWSER: ${{ github.event.inputs.browser || 'chrome' }}
  NETWORK: ${{ github.event.inputs.network || 'preprod' }}
  RUN: ${{ github.run_number }}
  DISPLAY: ':99.0'
  NODE_OPTIONS: --max-old-space-size=16384
  BRANCH: ${{ github.ref_name }}
  CARDANO_SERVICES_ENV: ${{ github.event.inputs.cardano_services_env || 'dev' }}
  BUILD_ARTIFACT_NAME: lace-${{ github.event.inputs.cardano_services_env || 'dev' }}-${{ github.sha }}

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Provision step
        run: |
          echo "Provisioning ${{ github.event.inputs.runner }}"

      - name: Check if build exists
        shell: bash
        id: check-build-exists
        run: |
          ART_ID=$(curl "https://api.github.com/repos/input-output-hk/lace/actions/artifacts?name=${{ env.BUILD_ARTIFACT_NAME }}" | jq -r .artifacts[0].id)

          if ([ "$ART_ID" == "null" ]) then
            echo "Lace build artifact not found"
            echo "build_exists=false" >> $GITHUB_OUTPUT
          else
            echo "Build artifact found"
            echo "build_exists=true" >> $GITHUB_OUTPUT
          fi
    outputs:
      runner: ${{ github.event.inputs.runner || 'ubuntu-22.04' }}
      smoke_only: ${{ github.event.inputs.smoke_only || false }}
      build_exists: ${{ steps.check-build-exists.outputs.build_exists }}

  build:
    name: Build Lace
    runs-on: ${{ needs.setup.outputs.runner }}
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Lace artifact
        if: needs.setup.outputs.build_exists == 'false'
        uses: ./.github/shared/build
        with:
          CARDANO_SERVICES_URL_MAINNET: 'https://${{ env.CARDANO_SERVICES_ENV }}-mainnet.lw.iog.io'
          CARDANO_SERVICES_URL_PREPROD: 'https://${{ env.CARDANO_SERVICES_ENV }}-preprod.lw.iog.io'
          CARDANO_SERVICES_URL_PREVIEW: 'https://${{ env.CARDANO_SERVICES_ENV }}-preview.lw.iog.io'
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          LACE_EXTENSION_KEY: ${{ secrets.MANIFEST_PUBLIC_KEY }}

      - name: Upload build artifact
        if: needs.setup.outputs.build_exists == 'false'
        uses: actions/upload-artifact@v4
        with:
          name: '${{ env.BUILD_ARTIFACT_NAME }}'
          path: ./apps/browser-extension-wallet/dist

  tests:
    name: E2E tests
    strategy:
      fail-fast: false
      matrix:
        batch: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
    runs-on: ${{ needs.setup.outputs.runner }}
    needs: [setup, build]
    permissions:
      actions: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js and install dependencies
        uses: ./.github/actions/install
        with:
          WALLET_PASSWORD: ${{ secrets.WALLET_PASSWORD_TESTNET }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Download Lace build artifact
        shell: bash
        id: download-lace-build-artifact
        run: |
          ART_ID=$(curl "https://api.github.com/repos/input-output-hk/lace/actions/artifacts?name=${{ env.BUILD_ARTIFACT_NAME }}" | jq -r .artifacts[0].id)
          curl -o build_artifact.zip --location "https://api.github.com/repos/input-output-hk/lace/actions/artifacts/${ART_ID}/zip" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"
          unzip build_artifact.zip -d ./apps/browser-extension-wallet/dist
          echo "Build artifact found and downloaded"

      - name: Execute E2E tests
        uses: ./.github/actions/test/e2e
        with:
          BATCH: ${{ matrix.batch }}
          SMOKE_ONLY: ${{ needs.setup.outputs.smoke_only }}
          TEST_DAPP_URL: ${{ secrets.TEST_DAPP_URL }}
          WALLET_PASSWORD: ${{ secrets.WALLET_PASSWORD_TESTNET }}

  processReports:
    name: Process e2e test reports
    needs: [setup, tests]
    runs-on: ${{ needs.setup.outputs.runner }}
#    when cancelling job always() will prevent step from being cancelled and we don't want process results in this case
    if: ${{ success() || failure() }}
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          pattern: 'runner-artifacts-*'
          merge-multiple: true

      - name: Create allure properties
        working-directory: './artifacts/reports/allure/results'
        run: |
          echo "
          branch=${BRANCH}
          env=${NETWORK}
          browser=${BROWSER}
          platform=Linux
          smoke_only=${{ needs.setup.outputs.smoke_only }}
          cardano_services_env=${CARDANO_SERVICES_ENV}
          " > environment.properties

      - name: Publish allure report to S3
        uses: andrcuns/allure-publish-action@v2.6.0
        env:
          GITHUB_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.E2E_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.E2E_AWS_SECRET_ACCESS_KEY }}
        with:
          storageType: s3
          resultsGlob: './artifacts/reports/allure/results'
          bucket: lace-e2e-test-results
          prefix: 'all/linux/${BROWSER}/${RUN}'
          copyLatest: true
          ignoreMissingResults: true
          baseUrl: 'https://${{ secrets.E2E_REPORTS_USER }}:${{ secrets.E2E_REPORTS_PASSWORD }}@${{ secrets.E2E_REPORTS_URL }}'

      - name: Add link to summary
        run: |
          echo "TEST RESULTS:"
          echo "https://${{ secrets.E2E_REPORTS_USER }}:${{ secrets.E2E_REPORTS_PASSWORD }}@${{ secrets.E2E_REPORTS_URL }}/all/linux/${{ env.BROWSER }}/${{ env.RUN }}/index.html | browser: ${{ env.BROWSER }} | network: ${{ env.NETWORK }} | platform: linux | smoke only: ${{ needs.setup.outputs.smoke_only }} | cardano services env: ${{ env.CARDANO_SERVICES_ENV }}" >> $GITHUB_STEP_SUMMARY

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2.3.0
        env:
          SLACK_COLOR: "${{ contains(needs.*.result, 'failure') && 'failure' || 'good' }}"
          SLACK_ICON_EMOJI: ':lace:'
          SLACK_MESSAGE: 'https://${{ secrets.E2E_REPORTS_USER }}:${{ secrets.E2E_REPORTS_PASSWORD }}@${{ secrets.E2E_REPORTS_URL }}/all/linux/${{ env.BROWSER }}/${{ env.RUN }}/index.html | browser: ${{ env.BROWSER }} | network: ${{ env.NETWORK }} | platform: linux  | smoke only: ${{ needs.setup.outputs.smoke_only }}  | cardano services env: ${{ env.CARDANO_SERVICES_ENV }}'
          SLACK_TITLE: 'Test automation results :rocket:'
          SLACK_USERNAME: lace-qa-bot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - name: Deleting chrome tmp files
        id: clean-chrome-tmp-files
        if: ${{ needs.setup.outputs.runner == 'self-hosted' }}
        run: |
          runCommand="rm -rf /tmp/.org.chromium.*"
          eval "$runCommand";

      - name: Upload allure tests results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: ./artifacts/reports/allure/results
