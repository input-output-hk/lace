diff --git a/systray_windows.go b/systray_windows.go
index 6bdc803..c0832a0 100644
--- a/systray_windows.go
+++ b/systray_windows.go
@@ -16,6 +16,11 @@ import (
 	"golang.org/x/sys/windows"
 )
 
+/*
+void lbs__mainthread__call_current_function();
+*/
+import "C"
+
 // Helpful sources: https://github.com/golang/exp/blob/master/shiny/driver/internal/win32
 
 var (
@@ -200,6 +205,7 @@ type winTray struct {
 	muNID sync.RWMutex
 	wcex  *wndClassEx
 
+	wmScheduleOnMainThread,
 	wmSystrayMessage,
 	wmTaskbarCreated uint32
 }
@@ -280,6 +286,8 @@ func (t *winTray) wndProc(hWnd windows.Handle, message uint32, wParam, lParam ui
 		case WM_RBUTTONUP, WM_LBUTTONUP:
 			t.showMenu()
 		}
+	case t.wmScheduleOnMainThread:
+		C.lbs__mainthread__call_current_function()
 	case t.wmTaskbarCreated: // on explorer.exe restarts
 		t.muNID.Lock()
 		t.nid.add()
@@ -330,6 +338,7 @@ func (t *winTray) initInstance() error {
 	)
 
 	t.wmSystrayMessage = WM_USER + 1
+	t.wmScheduleOnMainThread = WM_USER + 2
 	t.visibleItems = make(map[uint32][]uint32)
 	t.menus = make(map[uint32]windows.Handle)
 	t.menuOf = make(map[uint32]windows.Handle)
@@ -819,6 +828,16 @@ func quit() {
 	)
 }
 
+//export lbs__mainthread__windows_post_message
+func lbs__mainthread__windows_post_message() {
+	pPostMessage.Call(
+		uintptr(wt.window),
+		uintptr(wt.wmScheduleOnMainThread),
+		0,
+		0,
+	)
+}
+
 func iconBytesToFilePath(iconBytes []byte) (string, error) {
 	bh := md5.Sum(iconBytes)
 	dataHash := hex.EncodeToString(bh[:])
