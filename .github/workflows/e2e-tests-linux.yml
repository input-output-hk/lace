name: E2E Tests Linux

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - 'release/**'
  workflow_dispatch:
    inputs:
      tags:
        description: 'Test scenario tags (will run all tests if empty)'
        required: false
      browser:
        description: 'Browser to use'
        required: true
        default: 'chrome'
        type: choice
        options:
          - chrome
          - edge
      network:
        type: choice
        description: network to use
        options:
          - preprod
          - mainnet

run-name: "E2E | os: Linux | browser: ${{ github.event.inputs.browser || 'chrome' }} | tags: ${{ github.event.inputs.tags || 'empty' }} | network: ${{ github.event.inputs.network }} | #${{ github.run_number }}"

env:
  TAGS: ${{ github.event.inputs.tags || 'empty' }}
  BROWSER: ${{ github.event.inputs.browser || 'chrome' }}
  NETWORK: ${{ github.event.inputs.network || 'preprod' }}
  RUN: ${{ github.run_number }}
  DISPLAY: ':99.0'
  NODE_OPTIONS: --max-old-space-size=16384
  BRANCH: ${{ github.ref_name }}

jobs:
  tests-run-part-1:
    runs-on: ubuntu-22.04
#    concurrency:
#      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
#      cancel-in-progress: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Decrypt test data
        working-directory: ./packages/e2e-tests
        run: ./decrypt_secret.sh
        env:
          WALLET_1_PASSWORD: ${{ secrets.WALLET_PASSWORD_TESTNET }}
      - name: Build dist version of Lace
        uses: ./.github/shared/build
        with:
          LACE_EXTENSION_KEY: ${{ secrets.MANIFEST_PUBLIC_KEY }}
      - name: Start XVFB
        run: |
          Xvfb :99 &
      - name: Execute E2E tests
        id: e2e-tests
        working-directory: ./packages/e2e-tests
        env:
          WALLET_1_PASSWORD: ${{ secrets.WALLET_PASSWORD_TESTNET }}
          TEST_DAPP_URL: ${{ secrets.TEST_DAPP_URL }}
          ENV: ${{ env.NETWORK }}
        run: |
          runCommand="yarn wdio run wdio.conf.${BROWSER}.ts --cucumberOpts.tags=@LW-7430 and @Testnet and not @Pending"
          eval "$runCommand";
      - name: Save tests results
        uses: actions/upload-artifact@v4
        with:
          name: tests-run-part-1-results
          path: ./packages/e2e-tests/reports/allure/results
  tests-run-part-2:
    runs-on: ubuntu-22.04
#    concurrency:
#      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
#      cancel-in-progress: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Decrypt test data
        working-directory: ./packages/e2e-tests
        run: ./decrypt_secret.sh
        env:
          WALLET_1_PASSWORD: ${{ secrets.WALLET_PASSWORD_TESTNET }}
      - name: Build dist version of Lace
        uses: ./.github/shared/build
        with:
          LACE_EXTENSION_KEY: ${{ secrets.MANIFEST_PUBLIC_KEY }}
      - name: Start XVFB
        run: |
          Xvfb :99 &
      - name: Execute E2E tests
        id: e2e-tests
        working-directory: ./packages/e2e-tests
        env:
          WALLET_1_PASSWORD: ${{ secrets.WALLET_PASSWORD_TESTNET }}
          TEST_DAPP_URL: ${{ secrets.TEST_DAPP_URL }}
          ENV: ${{ env.NETWORK }}
        run: |
          runCommand="yarn wdio run wdio.conf.${BROWSER}.ts --cucumberOpts.tags=@LW-7435 and @Testnet and not @Pending"
          eval "$runCommand";
      - name: Save tests results
        uses: actions/upload-artifact@v4
        with:
          name: tests-run-part-2-results
          path: ./packages/e2e-tests/reports/allure/results
  results-processing:
    needs: [tests-run-part-1, tests-run-part-2]
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: Download reports from part 1
        uses: actions/download-artifact@v4
        with:
          name: tests-run-part-1-results
          path: ./tests-run-part-1-results
      - name: Download reports from part 2
        uses: actions/download-artifact@v4
        with:
          name: tests-run-part-2-results
          path: ./tests-run-part-2-results
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
      - name: Copy allure results
        if: always()
#        working-directory: ./packages/e2e-tests/reports/allure/results
        run: |
            mkdir -p ./allure/results
            cp -r ./tests-run-part-1-results/* ./allure/results
            cp -r ./tests-run-part-2-results/* ./allure/results
      - name: Create allure properties
        if: always()
        #        working-directory: '/e2e-tests/reports/allure/results'
        run: |
          echo "
          branch=${BRANCH}
          env=${NETWORK}
          browser=${BROWSER}
          tags=${TAGS}
          platform=Linux
          " > environment.properties
      - name: Publish artifacts (logs, reports, screenshots)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-artifacts
          path: |
            ./allure
          retention-days: 10

