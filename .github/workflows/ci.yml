name: Continuous Integration with Datadog

on:
  push:
    branches: [ main, develop, test/berno_prom_metrics ]
  pull_request:
    branches: [ main, develop ]

env:
  BUILD_ARTIFACT_NAME: 'lace-dev-${{ github.sha }}'

jobs:
  datadog-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Send CI metrics to Datadog
        run: |
          if [ -n "${{ secrets.DATADOG_API_KEY }}" ]; then
            echo "Sending CI metrics to Datadog v2..."
            response=$(curl -s -w "%{http_code}" -X POST "https://api.us5.datadoghq.com/api/v2/series" \
              -H "Content-Type: application/json" \
              -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
              -d '{
                "series": [{
                  "metric": "github.ci.pipeline.duration",
                  "points": [{"timestamp": $(date +%s), "value": ${{ github.run_duration }}}],
                  "tags": ["service:lace-wallet", "env:ci", "workflow:${{ github.workflow }}", "job:${{ github.job }}", "repo:${{ github.repository }}", "branch:${{ github.ref_name }}"]
                }, {
                  "metric": "github.ci.pipeline.status",
                  "points": [{"timestamp": $(date +%s), "value": 1}],
                  "tags": ["service:lace-wallet", "env:ci", "workflow:${{ github.workflow }}", "job:${{ github.job }}", "status:${{ job.status }}", "repo:${{ github.repository }}", "branch:${{ github.ref_name }}"]
                }, {
                  "metric": "github.ci.job.duration",
                  "points": [{"timestamp": $(date +%s), "value": ${{ github.run_duration }}}],
                  "tags": ["service:lace-wallet", "env:ci", "workflow:${{ github.workflow }}", "job:${{ github.job }}", "runner:ubuntu-latest", "repo:${{ github.repository }}"]
                }]
              }')
            echo "Datadog API response: $response"
          else
            echo "No DATADOG_API_KEY provided, skipping metrics"
          fi

  prepare:
    name: Prepare
    runs-on: ubuntu-22.04
    needs: [datadog-ci]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Collect Workflow Telemetry Build Packages
        uses: catchpoint/workflow-telemetry-action@v2
        with:
          comment_on_pr: false

      - name: Setup Node.js and install dependencies
        uses: ./.github/actions/install
        with:
          WALLET_PASSWORD: ${{ secrets.WALLET_PASSWORD_TESTNET }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build common
        uses: ./.github/actions/build/package
        with:
          DIR: packages/common
          NAME: packages-common

      - name: Build cardano
        uses: ./.github/actions/build/package
        with:
          DIR: packages/cardano
          NAME: packages-cardano

      - name: Build translation
        uses: ./.github/actions/build/package
        with:
          DIR: packages/translation
          NAME: packages-translation

      - name: Build core
        uses: ./.github/actions/build/package
        with:
          DIR: packages/core
          NAME: packages-core

      - name: Build staking
        uses: ./.github/actions/build/package
        with:
          DIR: packages/staking
          NAME: packages-staking

      - name: Build nami
        uses: ./.github/actions/build/package
        with:
          DIR: packages/nami
          NAME: packages-nami

      - name: Build bitcoin
        uses: ./.github/actions/build/package
        with:
          DIR: packages/bitcoin
          NAME: packages-bitcoin

      - name: Send build metrics to Datadog
        run: |
          if [ -n "${{ secrets.DATADOG_API_KEY }}" ]; then
            echo "Sending build metrics to Datadog v2..."
            response=$(curl -s -w "%{http_code}" -X POST "https://api.us5.datadoghq.com/api/v2/series" \
              -H "Content-Type: application/json" \
              -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
              -d '{
                "series": [{
                  "metric": "lace.build.packages",
                  "points": [{"timestamp": $(date +%s), "value": 1}],
                  "tags": ["service:lace-wallet", "env:ci", "workflow:ci", "status:${{ job.status }}", "repo:${{ github.repository }}", "branch:${{ github.ref_name }}", "job:prepare"]
                }, {
                  "metric": "lace.build.duration",
                  "points": [{"timestamp": $(date +%s), "value": ${{ github.run_duration }}}],
                  "tags": ["service:lace-wallet", "env:ci", "workflow:ci", "job:prepare", "repo:${{ github.repository }}"]
                }]
              }')
            echo "Datadog API response: $response"
          else
            echo "No DATADOG_API_KEY provided, skipping build metrics"
          fi

  unitTests:
    name: Unit Tests
    runs-on: ubuntu-22.04
    needs: prepare

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js and install dependencies
        uses: ./.github/actions/install
        with:
          WALLET_PASSWORD: ${{ secrets.WALLET_PASSWORD_TESTNET }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Download packages-common
        uses: actions/download-artifact@v4
        with:
          name: packages-common
          path: packages/common/dist

      - name: Download packages-cardano
        uses: actions/download-artifact@v4
        with:
          name: packages-cardano
          path: packages/cardano/dist

      - name: Download packages-translation
        uses: actions/download-artifact@v4
        with:
          name: packages-translation
          path: packages/translation/dist

      - name: Download packages-core
        uses: actions/download-artifact@v4
        with:
          name: packages-core
          path: packages/core/dist

      - name: Download packages-staking
        uses: actions/download-artifact@v4
        with:
          name: packages-staking
          path: packages/staking/dist

      - name: Download packages-nami
        uses: actions/download-artifact@v4
        with:
          name: packages-nami
          path: packages/nami/dist

      - name: Download packages-bitcoin
        uses: actions/download-artifact@v4
        with:
          name: packages-bitcoin
          path: packages/bitcoin/dist

      - name: Run unit tests
        run: yarn test
        env:
          AVAILABLE_CHAINS: 'Preprod,Preview,Mainnet'
          DEFAULT_CHAIN: 'Preprod'
          NODE_OPTIONS: '--max_old_space_size=8192'

      - name: Send test metrics to Datadog
        run: |
          if [ -n "${{ secrets.DATADOG_API_KEY }}" ]; then
            echo "Sending test metrics to Datadog v2..."
            response=$(curl -s -w "%{http_code}" -X POST "https://api.us5.datadoghq.com/api/v2/series" \
              -H "Content-Type: application/json" \
              -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
              -d '{
                "series": [{
                  "metric": "lace.tests.unit",
                  "points": [{"timestamp": $(date +%s), "value": 1}],
                  "tags": ["service:lace-wallet", "env:ci", "workflow:unitTests", "status:${{ job.status }}", "repo:${{ github.repository }}", "branch:${{ github.ref_name }}", "test_type:unit"]
                }, {
                  "metric": "lace.tests.duration",
                  "points": [{"timestamp": $(date +%s), "value": ${{ github.run_duration }}}],
                  "tags": ["service:lace-wallet", "env:ci", "workflow:unitTests", "test_type:unit", "repo:${{ github.repository }}"]
                }]
              }')
            echo "Datadog API response: $response"
          else
            echo "No DATADOG_API_KEY provided, skipping test metrics"
          fi

  release-pkg:
    name: Release package
    runs-on: ubuntu-22.04
    needs: prepare

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js and install dependencies
        uses: ./.github/actions/install
        with:
          WALLET_PASSWORD: ${{ secrets.WALLET_PASSWORD_TESTNET }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Download packages-common
        uses: actions/download-artifact@v4
        with:
          name: packages-common
          path: packages/common/dist

      - name: Download packages-cardano
        uses: actions/download-artifact@v4
        with:
          name: packages-cardano
          path: packages/cardano/dist

      - name: Download packages-translation
        uses: actions/download-artifact@v4
        with:
          name: packages-translation
          path: packages/translation/dist

      - name: Download packages-core
        uses: actions/download-artifact@v4
        with:
          name: packages-core
          path: packages/core/dist

      - name: Download packages-staking
        uses: actions/download-artifact@v4
        with:
          name: packages-staking
          path: packages/staking/dist

      - name: Download packages-nami
        uses: actions/download-artifact@v4
        with:
          name: packages-nami
          path: packages/nami/dist

      - name: Download packages-bitcoin
        uses: actions/download-artifact@v4
        with:
          name: packages-bitcoin
          path: packages/bitcoin/dist

      - name: Collect Workflow Telemetry Smoke Tests
        uses: catchpoint/workflow-telemetry-action@v2
        with:
          comment_on_pr: false

      - name: Build Lace browser extension
        uses: ./.github/actions/build/app
        with:
          BLOCKFROST_PROJECT_ID_MAINNET: ${{ secrets.BLOCKFROST_PROJECT_ID_MAINNET }}
          BLOCKFROST_PROJECT_ID_PREPROD: ${{ secrets.BLOCKFROST_PROJECT_ID_PREPROD }}
          BLOCKFROST_PROJECT_ID_PREVIEW: ${{ secrets.BLOCKFROST_PROJECT_ID_PREVIEW }}
          MAESTRO_PROJECT_ID_MAINNET: ${{ secrets.MAESTRO_PROJECT_ID_MAINNET }}
          MAESTRO_PROJECT_ID_TESTNET: ${{ secrets.MAESTRO_PROJECT_ID_TESTNET }}
          DIR: apps/browser-extension-wallet
          NAME: lace-browser-extension
          LACE_EXTENSION_KEY: ${{ secrets.MANIFEST_PUBLIC_KEY }}
          POSTHOG_PRODUCTION_TOKEN: ${{ startsWith(github.ref, 'refs/heads/release') && secrets.POSTHOG_PRODUCTION_TOKEN || '' }}
          PRODUCTION_MODE_TRACKING: ${{ startsWith(github.ref, 'refs/heads/release') && 'true' || 'false' }}
          BANXA_LACE_URL: ${{ startsWith(github.ref, 'refs/heads/release') && 'https://lacewallet.banxa.com/' }}
          SENTRY_AUTH_TOKEN: ${{ startsWith(github.ref, 'refs/heads/release') && secrets.SENTRY_AUTH_TOKEN || '' }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_ORG: ${{ startsWith(github.ref, 'refs/heads/release') && vars.SENTRY_ORG || '' }}
          SENTRY_PROJECT: ${{ startsWith(github.ref, 'refs/heads/release') && vars.SENTRY_PROJECT || ''}}
          SENTRY_ENVIRONMENT: 'production'
          DAPP_RADAR_API_KEY: ${{ startsWith(github.ref, 'refs/heads/release') && secrets.DAPP_RADAR_API_KEY || '' }}

      - name: Send release metrics to Datadog
        run: |
          if [ -n "${{ secrets.DATADOG_API_KEY }}" ]; then
            echo "Sending release metrics to Datadog v2..."
            response=$(curl -s -w "%{http_code}" -X POST "https://api.us5.datadoghq.com/api/v2/series" \
              -H "Content-Type: application/json" \
              -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
              -d '{
                "series": [{
                  "metric": "lace.release.package",
                  "points": [{"timestamp": $(date +%s), "value": 1}],
                  "tags": ["service:lace-wallet", "env:ci", "workflow:release-pkg", "status:${{ job.status }}", "repo:${{ github.repository }}", "branch:${{ github.ref_name }}", "artifact:lace-browser-extension"]
                }, {
                  "metric": "lace.release.duration",
                  "points": [{"timestamp": $(date +%s), "value": ${{ github.run_duration }}}],
                  "tags": ["service:lace-wallet", "env:ci", "workflow:release-pkg", "repo:${{ github.repository }}"]
                }]
              }')
            echo "Datadog API response: $response"
          else
            echo "No DATADOG_API_KEY provided, skipping release metrics"
          fi

  datadog-final:
    needs: [prepare, unitTests, release-pkg]
    runs-on: ubuntu-latest
    steps:
      - name: Send final CI metrics to Datadog
        run: |
          if [ -n "${{ secrets.DATADOG_API_KEY }}" ]; then
            echo "Sending final metrics to Datadog v2..."
            
            # Calculate overall pipeline status
            if [ "${{ needs.prepare.result }}" = "success" ] && [ "${{ needs.unitTests.result }}" = "success" ] && [ "${{ needs.release-pkg.result }}" = "success" ]; then
              overall_status="success"
            else
              overall_status="failure"
            fi
            
            # Get current timestamp
            timestamp=$(date +%s)
            
            # Send final metrics
            response=$(curl -s -w "%{http_code}" -X POST "https://api.us5.datadoghq.com/api/v2/series" \
              -H "Content-Type: application/json" \
              -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
              -d "{
                \"series\": [{
                  \"metric\": \"github.ci.pipeline.final_status\",
                  \"points\": [{\"timestamp\": $timestamp, \"value\": 1}],
                  \"tags\": [\"service:lace-wallet\", \"env:ci\", \"workflow:ci\", \"status:$overall_status\", \"repo:${{ github.repository }}\", \"branch:${{ github.ref_name }}\", \"commit:${{ github.sha }}\"]
                }, {
                  \"metric\": \"github.ci.pipeline.total_duration\",
                  \"points\": [{\"timestamp\": $timestamp, \"value\": ${{ github.run_duration }}}],
                  \"tags\": [\"service:lace-wallet\", \"env:ci\", \"workflow:ci\", \"repo:${{ github.repository }}\", \"branch:${{ github.ref_name }}\"]
                }]
              }")
            echo "Datadog API response: $response"
            
            # Send event using v1 API (more reliable for events)
            event_response=$(curl -s -w "%{http_code}" -X POST "https://api.us5.datadoghq.com/api/v1/events" \
              -H "Content-Type: application/json" \
              -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
              -d "{
                \"title\": \"Lace CI Pipeline Complete\",
                \"text\": \"All CI jobs completed for ${{ github.repository }}\nBranch: ${{ github.ref_name }}\nCommit: ${{ github.sha }}\nStatus: ${{ needs.prepare.result }}, ${{ needs.unitTests.result }}, ${{ needs.release-pkg.result }}\nOverall: $overall_status\",
                \"tags\": [\"service:lace-wallet\", \"env:ci\", \"workflow:ci\", \"repo:lace\", \"status:$overall_status\"],
                \"alert_type\": \"$overall_status\",
                \"source_type_name\": \"github\"
              }")
            echo "Datadog Event API response: $event_response"
          else
            echo "No DATADOG_API_KEY provided, skipping final metrics"
          fi 