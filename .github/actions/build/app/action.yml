name: buildapp
description: Build app

inputs:
  BLOCKFROST_PROJECT_ID_MAINNET:
    description: 'MainNet Project ID for Blockfrost API usage'
    required: true
  BLOCKFROST_PROJECT_ID_PREPROD:
    description: 'PreProd Project ID for Blockfrost API usage'
    required: true
  BLOCKFROST_PROJECT_ID_PREVIEW:
    description: 'Preview Project ID for Blockfrost API usage'
    required: true
  MAESTRO_PROJECT_ID_MAINNET:
    description: 'MainNet Project ID for Bitcoin API usage'
    required: true
  MAESTRO_PROJECT_ID_TESTNET:
    description: 'TestNet4 Project ID for Bitcoin API usage'
    required: true
  DIR:
    description: 'app directory'
    required: true
  NAME:
    description: 'app name'
    required: true
  LACE_EXTENSION_KEY:
    description: 'Public extended manifest key'
    required: true
  DAPP_RADAR_API_KEY:
    description: 'Production api token of DApp Radar API'
    required: true
  BUILD_DEV_PREVIEW:
    description: 'Build developer preview of Lace'
    required: false
    default: 'false'
  POSTHOG_PRODUCTION_TOKEN:
    description: 'Post hog production token'
    required: false
    default: ''
  PRODUCTION_MODE_TRACKING:
    description: 'Enable analytics tracking in production'
    required: false
    default: 'false'
  BANXA_LACE_URL:
    description: 'Banxa`s integration URL'
    required: false
    default: 'https://lacewallet.banxa-sandbox.com/'
  SENTRY_AUTH_TOKEN:
    description: 'Authentication token for Sentry, used to publish source maps for releases'
    required: false
    default: ''
  SENTRY_DSN:
    description: 'Data Source Name for Sentry, AKA Client Key. This tells a Sentry SDK where to send events so the events are associated
    with the correct project'
    required: false
    default: ''
  SENTRY_ORG:
    description: 'Organization identifier for Sentry, used to publish source maps for releases'
    required: false
    default: ''
  SENTRY_PROJECT:
    description: 'Project identifier for Sentry, used to publish source maps for releases'
    required: false
    default: ''
  SENTRY_ENVIRONMENT:
    description: 'Project environment for Sentry, used to differentiate issue sources'
    required: false
    default: ''
  BROWSER_TARGET:
    description: 'Browser target to build for. Options are [chromium | firefox]'
    required: false
    default: 'chromium'

runs:
  using: 'composite'

  steps:
    - name: Code check
      uses: ./.github/actions/check
      with:
        DIR: ${{ inputs.DIR }}

    - name: Build ${{ inputs.NAME }}
      run: yarn build
      shell: bash
      working-directory: ${{ inputs.DIR }}
      env:
        BLOCKFROST_PROJECT_ID_MAINNET: ${{ inputs.BLOCKFROST_PROJECT_ID_MAINNET }}
        BLOCKFROST_PROJECT_ID_PREPROD: ${{ inputs.BLOCKFROST_PROJECT_ID_PREPROD }}
        BLOCKFROST_PROJECT_ID_PREVIEW: ${{ inputs.BLOCKFROST_PROJECT_ID_PREVIEW }}
        MAESTRO_PROJECT_ID_MAINNET: ${{ inputs.MAESTRO_PROJECT_ID_MAINNET }}
        MAESTRO_PROJECT_ID_TESTNET: ${{ inputs.MAESTRO_PROJECT_ID_TESTNET }}
        LACE_EXTENSION_KEY: ${{ inputs.LACE_EXTENSION_KEY }}
        DAPP_RADAR_API_KEY: ${{ inputs.DAPP_RADAR_API_KEY }}
        BUILD_DEV_PREVIEW: ${{ inputs.BUILD_DEV_PREVIEW }}
        POSTHOG_PRODUCTION_TOKEN: ${{ inputs.POSTHOG_PRODUCTION_TOKEN }}
        PRODUCTION_MODE_TRACKING: ${{ inputs.PRODUCTION_MODE_TRACKING }}
        BANXA_LACE_URL: ${{ inputs.BANXA_LACE_URL }}
        SENTRY_AUTH_TOKEN: ${{ inputs.SENTRY_AUTH_TOKEN }}
        SENTRY_DSN: ${{ inputs.SENTRY_DSN }}
        SENTRY_ORG: ${{ inputs.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ inputs.SENTRY_PROJECT }}
        SENTRY_ENVIRONMENT: ${{ inputs.SENTRY_ENVIRONMENT }}
        BROWSER: ${{ inputs.BROWSER_TARGET }}

    - name: Upload Chrome artifact
      if: ${{ inputs.BROWSER_TARGET == 'chromium' }}
      uses: actions/upload-artifact@v4
      with:
        name: lace-chrome-browser-extension
        path: ${{ inputs.DIR }}/dist

    - name: Prepare MS Edge
      if: ${{ inputs.BROWSER_TARGET == 'chromium' }}
      run: |
        jq 'del(.key)' manifest.json | jq -c . > manifest.tmp.json
        mv manifest.tmp.json manifest.json
      shell: bash
      working-directory: ${{ inputs.DIR }}/dist

    - name: Upload MS Edge artifact
      if: ${{ inputs.BROWSER_TARGET == 'chromium' }}
      uses: actions/upload-artifact@v4
      with:
        name: lace-edge-browser-extension
        path: ${{ inputs.DIR }}/dist

    - name: Prepare Firefox
      if: ${{ inputs.BROWSER_TARGET == 'firefox' }}
      run: yarn pack:firefox
      shell: bash
      working-directory: ${{ inputs.DIR }}

    - name: Upload Firefox artifact
      if: ${{ inputs.BROWSER_TARGET == 'firefox' }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.NAME }}
        path: ${{ inputs.DIR }}/artifacts-firefox
